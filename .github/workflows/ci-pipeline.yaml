name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      
permissions:
  # Grant write access to security events for uploading SARIF results
  security-events: write

jobs:
  # Build, Test, and Push Images
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker cache
        uses: actions/cache@v3
        with:
          path: /var/lib/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Build backend container
        run: docker build -t backend:test -f Dockerfile.backend .

      - name: Build MongoDB container
        run: docker build -t mongodb:test -f Dockerfile.db .

      - name: Run backend and MongoDB containers for testing
        run: |
          docker network create my_network
          docker run --name mongodb --network my_network -d mongodb:test
          docker run --name backend --network my_network -d backend:test
          sleep 10 # Wait for services to start

      - name: Run unit tests
        run: docker exec backend npm test

      - name: Save test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-results
          path: ./test-results/ # Update path to your test results

      - name: Stop and remove containers
        run: |
          docker stop backend mongodb
          docker rm backend mongodb
          docker network rm my_network

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Backend Image
        run: |
          docker tag backend:test ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Tag and Push MongoDB Image
        run: |
          docker tag mongodb:test ${{ secrets.DOCKER_USERNAME }}/mongodb:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mongodb:latest

  # Linter Job
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install # Install dependencies for linting

      - name: Run ESLint
        run: npx eslint . --max-warnings=0
        env:
          NODE_ENV: test

  # SAST Job with simplified CodeQL configuration
  
  sast:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript  

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: 'security-v1'
          output: 'results/javascript.sarif'  #  path for SARIF file

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v2  # Upload SARIF to GitHub for review
        with:
          sarif_file: results/javascript.sarif  # Specify the location of SARIF file
          

