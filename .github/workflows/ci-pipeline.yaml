jobs:
  build-test-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker cache
        uses: actions/cache@v3
        with:
          path: /var/lib/docker
          key: ${{ runner.os }}-docker-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-

      # Backend Docker build, run, and push
      - name: Build backend container
        run: docker build -t backend:test -f Dockerfile.backend .

      - name: Build MongoDB container
        run: docker build -t mongodb:test -f Dockerfile.db .

      - name: Build frontend container
        run: docker build -t frontend:test -f Dockerfile.frontend .

      - name: Run backend, MongoDB, and frontend containers for testing
        run: |
          docker network create my_network
          docker run --name mongodb --network my_network -d mongodb:test
          docker run --name backend --network my_network -d backend:test
          docker run --name frontend --network my_network -d frontend:test
          sleep 10 # Wait for services to start

      - name: Run unit tests
        run: docker exec backend npm test

      # Check if the test results directory exists
      - name: Check if test results directory exists
        run: |
          if [ -d "./test-results" ]; then
            echo "Directory exists."
          else
            echo "Directory does not exist."
            exit 1  # Optionally fail the job if the directory doesn't exist
          fi

      # Save test results only if the directory exists
      - name: Save test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: backend-test-results
          path: ./test-results/  # Path to your test results

      - name: Stop and remove containers
        run: |
          docker stop backend mongodb frontend
          docker rm backend mongodb frontend
          docker network rm my_network

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Tag and Push Backend Image
        run: |
          docker tag backend:test ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

      - name: Tag and Push MongoDB Image
        run: |
          docker tag mongodb:test ${{ secrets.DOCKER_USERNAME }}/mongodb:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mongodb:latest

      - name: Tag and Push Frontend Image
        run: |
          docker tag frontend:test ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest

